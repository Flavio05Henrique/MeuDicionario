// <auto-generated />
using System;
using MeuDicionario.Infra;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace MeuDicionario.Migrations
{
    [DbContext(typeof(MyDictionaryContex))]
    [Migration("20250304015610_Remove date time in revision")]
    partial class Removedatetimeinrevision
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("MeuDicionario.Model.RevisionLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("RevisionLogs");
                });

            modelBuilder.Entity("MeuDicionario.Model.RevisionV3", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Word")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Word");

                    b.ToTable("RevisionV3");
                });

            modelBuilder.Entity("MeuDicionario.Model.Text", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("TextItSelf")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("WordsInText")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Texts");
                });

            modelBuilder.Entity("MeuDicionario.Model.TextWord", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("TextRefId")
                        .HasColumnType("int");

                    b.Property<int>("WordRefId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("TextRefId");

                    b.HasIndex("WordRefId");

                    b.ToTable("TextWords");
                });

            modelBuilder.Entity("MeuDicionario.Model.Word", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("LastSeen")
                        .HasColumnType("datetime2");

                    b.Property<string>("Meaning")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("Id");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("MeuDicionario.Model.RevisionV3", b =>
                {
                    b.HasOne("MeuDicionario.Model.Word", "WordRef")
                        .WithMany()
                        .HasForeignKey("Word")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WordRef");
                });

            modelBuilder.Entity("MeuDicionario.Model.TextWord", b =>
                {
                    b.HasOne("MeuDicionario.Model.Text", "TextRef")
                        .WithMany()
                        .HasForeignKey("TextRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("MeuDicionario.Model.Word", "WordRef")
                        .WithMany()
                        .HasForeignKey("WordRefId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("TextRef");

                    b.Navigation("WordRef");
                });
#pragma warning restore 612, 618
        }
    }
}
